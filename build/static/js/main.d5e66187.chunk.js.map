{"version":3,"sources":["ApiContext.js","configApi.js","AddFolder/AddFolder.js","NoteListNav/NoteListNav.js","notes-helpers.js","NotePageNav/NotePageNav.js","Note/Note.js","AddNote/AddNote.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","files/Header.js","ErrorBoundary.js","App.js","index.js"],"names":["React","createContext","notes","folders","addFolder","addNote","deleteNote","AddFolder","state","error","handleSubmit","e","preventDefault","name","target","id","cuid","value","setState","fetch","configApi","method","body","JSON","stringify","headers","then","res","ok","json","data","console","log","context","catch","props","history","push","this","className","onSubmit","htmlFor","type","required","message","Component","contextType","ApiContext","NoteListNav","url","map","folder","to","onClick","showFolder","findNote","noteId","find","note","NotePageNav","match","params","folderid","findFolder","tag","role","goBack","defaultProps","Note","handleClickDelete","Promise","reject","onDeleteNote","modified","AddNote","content","Date","NoteListMain","notesForFolder","filter","getNotesForFolder","Link","showNote","NotePageMain","handleDeleteNote","split","para","i","Header","ErrorBoundary","hasError","children","App","all","notesRes","foldersRes","path","exact","component","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5e66187.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {}\r\n})","export default {\r\n  API_ENDPOINT: 'https://damp-castle-16994.herokuapp.com/api',\r\n}\r\n\r\n//http://localhost:9090\r\n//https://damp-castle-16994.herokuapp.com/api","import React, { Component } from 'react';\r\nimport ApiContext from '../ApiContext';\r\nimport configApi from '../configApi';\r\nimport cuid from 'cuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFolder extends Component {\r\n\t\tstatic contextType = ApiContext;\r\n\t\t\tstate = {\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { name } = e.target\r\n\t\t//console.log(name);\r\n\t\tconst folders = {\r\n\t\t\tid: cuid(),\r\n\t\t\tname: name.value\r\n\t\t}\r\n\t\t\r\n\r\n\tthis.setState({ error: null })\r\n\tfetch(`${configApi.API_ENDPOINT}/folders`, {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify(folders),\r\n\t\theaders: {\r\n\t\t\t'content-type': 'application/json'\r\n\t\t}\r\n\t})  \r\n\r\n\t.then(res => {\r\n\t\tif (!res.ok) {\r\n\t\t\treturn res.json().then(error => {\r\n\t\t\t\tthrow error\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn res.json()\r\n\t})\r\n\r\n\t.then (data => {\r\n\t\tconsole.log(this.context)\r\n\t\t//data.id = ''\r\n\t\tname.value = ''\r\n\t\tthis.context.addFolder(data)\r\n\t})\r\n\t.catch (error => {\r\n\t\tconsole.log(error)\r\n\t\tthis.setState({error})\r\n\t})\r\n\tthis.props.history.push('/')\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error } = this.state\r\n\r\n\t\treturn(\r\n\r\n\t\t\t<div className='centerit addFolder'>\r\n\t\t\t\t\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<label htmlFor=\"name\">\r\n\t\t\t\t\t\tAdd Folder:\r\n\t\t\t\t\t</label><br />\r\n\t\t\t\t\t\t<input type='text' name='name' id='name' required /><br />\r\n\t\t\t\t\t\t<button type='submit'>Add Folder</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nAddFolder.propTypes = {\r\n\t\thistory: PropTypes.object\r\n\t}\r\n\r\nexport default AddFolder","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport ApiContext from '../ApiContext'\r\nimport AddFolder from '../AddFolder/AddFolder';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NoteListNav extends React.Component {\r\n  static contextType = ApiContext;\r\n\r\n  showFolder(url) {\r\n    this.props.history.push(url);\r\n  }\r\n\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {//{countNotesForFolder(notes, folder.id)} -->}\r\n                }\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='centerit addFolder'>\r\n\r\n          <button \r\n            type='button'\r\n            onClick={() => this.showFolder('/add-folder')}\r\n          >\r\n            <br />\r\n              Add Folder \r\n          </button>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nNoteListNav.propTypes = {\r\n  history: PropTypes.object\r\n}","export const findFolder = (folders=[], folderid) =>\r\n  folders.find(folder => folder.id === folderid)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id === noteId)\r\n\r\nexport const getNotesForFolder = (notes=[], folderid) => (\r\n  (!folderid)\r\n    ? notes\r\n    : notes.filter(note => note.folderid === folderid)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderid) =>\r\n  notes.filter(note => note.folderid === folderid).length","import React from 'react'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderid)\r\n    return (\r\n      <div className='centerit'>\r\n        <button\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          \r\n          <br />\r\n          Back\r\n        </button>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageNav.propTypes = {\r\n  history: PropTypes.object,\r\n  match: PropTypes.object,\r\n  params: PropTypes.array\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiContext from '../ApiContext';\r\nimport configApi from '../configApi';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${configApi.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified } = this.props\r\n    \r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          \r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {modified}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  modified: PropTypes.string\r\n}","import React, { Component } from 'react';\r\nimport ApiContext from '../ApiContext';\r\nimport cuid from 'cuid';\r\nimport configApi from '../configApi';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddNote extends Component {\r\n\tstatic contextType = ApiContext;\r\n\t\tstate = {\r\n\t\t\terror: null\r\n\t\t};\r\n\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tconst { name, content, folderid } = e.target\r\n\r\n\t\tconst notes = {\r\n\r\n\t\t\tid: cuid(),\r\n\t\t\tname: name.value,\r\n\t\t\tmodified: Date(),\r\n\t\t\tfolderid: folderid.value,\r\n\t\t\tcontent: content.value\r\n\t\t\t\r\n\t\t}\r\n\t\tconsole.log(notes);\r\n\t\r\n\t\tthis.setState({ error: null })\r\n\r\n\tfetch(`${configApi.API_ENDPOINT}/notes`, {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify(notes),\r\n\t\theaders: {\r\n\t\t\t'content-type': 'application/json'\r\n\t\t}\r\n\t})  \r\n\r\n\t\t.then(res => {\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\treturn res.json().then(error => {\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn res.json()\r\n\t})\r\n\r\n\t\t.then (data => {\r\n\t\t\t//console.log(this.context)\r\n\t\t\t\r\n\t\t\tname.value = ''\r\n\t\t\tfolderid.value = ''\r\n\t\t\tcontent.value = ''\r\n\r\n\t\t\tthis.context.addNote(data)\r\n\t\t\t\r\n\t})\r\n\r\n\r\n\t\t.catch (error => {\r\n\t\t\tconsole.log(error)\r\n\t\t\tthis.setState({error})\r\n\t})\r\n\t\tthis.props.history.push('/')\r\n\r\n}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst { folders=[] } = this.context\r\n\r\n\t\treturn(\r\n\t\t\t<div className='centerit'>\r\n\t\t\t\t<div className='keepLeft'>\r\n\t\t\t\t\t<h2>Create A Note</h2>\r\n\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t<label htmlFor='name'>\r\n\t\t\t\t\t\t\t\tName:<br />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<input type='text' id='name' name='name' required /><br />\r\n\r\n\t\t\t\t\t\t\t<label htmlFor='content'>\r\n\t\t\t\t\t\t\t\tContent: <br />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<textarea id='content' name='content' required /><br />\r\n\r\n\t\t\t\t\t\t\t<label htmlFor='folder'>\r\n\t\t\t\t\t\t\t\tFolder: <br />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<select id='folderid' name='folderid' required>\r\n\r\n\t\t\t\t\t\t\t\t{folders.map(folder =>\r\n\r\n\t\t\t\t\t\t\t\t<option value={folder.id} key={folder.id} id='folderid' name='folderid'>{folder.name}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t<button type='submit'>Add Note</button>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t}\r\n}\r\nAddNote.propTypes = {\r\n\thistory: PropTypes.object\r\n};\r\n\r\nexport default AddNote","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport AddNote from '../AddNote/AddNote';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\nshowNote(url) {\r\n  this.props.history.push(url);\r\n}\r\n\r\n  render() {\r\n    const { folderid } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderid)\r\n    return (\r\n      <section className='NoteListMain'>\r\n        <ul>\r\n          {notesForFolder.map(note =>\r\n            <li key={note.id}>\r\n              <Note\r\n                id={note.id}\r\n                name={note.name}\r\n                modified={note.modified}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='centerit'>\r\n          <button\r\n            tag={Link}           \r\n            type='button'           \r\n            onClick={() => this.showNote('/add-note')}\r\n          >\r\n            \r\n            <br />\r\n            Note\r\n          </button>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNoteListMain.propTypes = {\r\n  match: PropTypes.object,\r\n  params: PropTypes.array\r\n}","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: 'No Content' }\r\n    //console.log(this.context.notes[2].name)\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        \r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageMain.propTypes = {\r\n  match: PropTypes.object,\r\n  params: PropTypes.array\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<h1><Link to='/'>Noteful</Link></h1>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\treturn { hasError: true};\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn (\r\n\t\t\t\t<h2>Error Loading Page...</h2>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundary","import React, {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport NoteListNav from './NoteListNav/NoteListNav';\r\nimport NotePageNav from './NotePageNav/NotePageNav';\r\nimport NoteListMain from './NoteListMain/NoteListMain';\r\nimport NotePageMain from './NotePageMain/NotePageMain';\r\nimport Header from './files/Header';\r\nimport AddNote from './AddNote/AddNote';\r\nimport AddFolder from './AddFolder/AddFolder';\r\nimport ErrorBoundary from  './ErrorBoundary';\r\nimport ApiContext from './ApiContext';\r\nimport configApi from './configApi';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(`${configApi.API_ENDPOINT}/notes`),\r\n            fetch(`${configApi.API_ENDPOINT}/folders`)\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n\r\n handleDeleteNote = noteId => {\r\n        this.setState({\r\n            notes: this.state.notes.filter(note => note.id !== noteId)\r\n        });\r\n    };\r\n\r\naddFolder = folder => {\r\n    this.setState({\r\n        folders: [ ...this.state.folders, folder]\r\n    })\r\n};\r\n\r\naddNote = note => {\r\n    this.setState({\r\n        notes: [ ...this.state.notes, note]\r\n    })\r\n};\r\n\r\n\r\n    renderNavRoutes() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    {['/', '/folder/:folderid'].map(path => (\r\n                        <Route\r\n                            exact\r\n                            key={path}\r\n                            path={path}\r\n                            component={NoteListNav}\r\n                        />\r\n                    ))}\r\n                    <Route path=\"/note/:noteId\" component={NotePageNav} />\r\n                    <Route path=\"/add-folder\" component={NotePageNav} />\r\n                    <Route path=\"/add-note\" component={NotePageNav} />\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        return (\r\n            <div>\r\n                <ErrorBoundary>\r\n                    {['/', '/folder/:folderid'].map(path => (\r\n                        <Route\r\n                            exact\r\n                            key={path}\r\n                            path={path}\r\n                            component={NoteListMain}\r\n                        />\r\n                    ))}\r\n                    <Route path=\"/note/:noteId\" component={NotePageMain} />\r\n                    <Route path=\"/add-note\" component={AddNote} />\r\n                    <Route path='/add-folder' component={AddFolder} />\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n         const value = {\r\n            notes: this.state.notes,\r\n            folders: this.state.folders,\r\n            deleteNote: this.handleDeleteNote,\r\n            addFolder: this.addFolder,\r\n            addNote: this.addNote\r\n        };\r\n\r\n        //console.log(this.state.notes)\r\n\r\n        return (\r\n            <>\r\n            <ApiContext.Provider value={value}>\r\n                <div>\r\n                \r\n                    <header>\r\n                        <ErrorBoundary>\r\n                            <Header />\r\n                        </ErrorBoundary>\r\n                    </header>\r\n\r\n                    <main className='row'>\r\n                        \r\n                            <div className='sidebar'>\r\n                           \r\n                                {this.renderNavRoutes()}\r\n                            </div>\r\n\r\n                            <div className='maincontent'>\r\n                                {this.renderMainRoutes()}\r\n\r\n                            </div>\r\n                       \r\n                    </main>\r\n\r\n                </div>\r\n            </ApiContext.Provider>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    folders: PropTypes.array,\r\n    notes: PropTypes.array\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}